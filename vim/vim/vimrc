" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim
source $VIMRUNTIME/vimrc_example.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the
" following enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hlsearch		" Switch on search pattern highlighting.
set autowrite		" Automatically save before commands like :next and :make
set hidden             " Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)
set nomousehide		" Don't hide the mouse

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" source Yast syntax file
source ~/.vim/syntax/ycp.vim

set fileencodings=latin1

"from ruby
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins

set expandtab
set tabstop=2 shiftwidth=2 softtabstop=2
set autoindent
set backspace=2

colorscheme koehler

set nu

noremap <C-m> :set hlsearch! hlsearch?<CR>

"backups
set backupdir=/var/tmp/vim/backup
set directory=/var/tmp/vim/swap

vnoremap  g*  y/<C-R>"<CR>
nnoremap   g*  y/<C-R><C-W><CR>

"nmap  <F5>  :TlistToggle<CR>
nmap  <F6>  <C-\>f
nmap  <F7>  <C-T>
nmap  <F8>  <C-\>g
nmap  <F9>  <C-\>c
nmap  <F10> <C-\>s
nmap  <F12> <C-\>e

nmap  <S-F6>  :cs find f 
nmap  <S-F8>  :cs find g 
nmap  <S-F9>  :cs find c 
nmap  <S-F10> :cs find s 
nmap  <S-F12> :cs find e 

vmap  <F6>  y :cs find f <C-R>"<CR>
vmap  <F8>  y :cs find g <C-R>"<CR>
vmap  <F9>  y :cs find c <C-R>"<CR>
vmap  <F10>  y :cs find s <C-R>"<CR>
vmap  <F12>  y :cs find e <C-R>"<CR>

vmap  <F4> <Esc>`<O#if 0<Esc>`>o#endif /* 0 */<Esc>

imap <F2> OSL_Printf("%s(%d): %s\n", __FUNCTION__, __LINE__, );


" Whitespace and tab matching
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
match ExtraWhitespace /\s\+$\|\t/

"let Tlist_File_Fold_Auto_Close = 1

" From Angus
" set tag search options
"set complete=.,w,b,d,],i,k
"set tags=~/.vim/tags
"set dictionary=~/.vim/wordlists/c-keywords.list
"set showfulltag 	" when completng a word in ins mode 

" backspace and cursor keys wrap to previous/next line
set backspace=indent,eol,start whichwrap+=<,>,[,]

" set the default plugin accessor
"let g:mapleader = '\'

" change strange menu popup defaults
:hi Pmenu     ctermfg=black  ctermbg=yellow guifg=black  guibg=yellow
:hi PmenuSel  ctermfg=yellow ctermbg=blue   guifg=yellow guibg=blue

" Life saving backup mechanism
" ==============================
"set backup
"let nowdate =  strftime("%d-%m-%Y")
"call system("mkdir -p ~/tmp/vim-backup/" . nowdate)
"call system("mkdir -p ~/tmp/vim-swap/" . nowdate)
"execute "set backupdir=~/tmp/vim-backup/".nowdate.",~/tmp,/tmp"
"execute "set directory=~/tmp/vim-swap/".nowdate.",~/tmp,/tmp"
"let nowtime =  strftime("%T")
"execute "set backupext=_" . nowtime 

" doxygen
" =======
"au BufNewFile,BufRead *.dox setfiletype doxygen
"let g:doxygen_enhanced_color=1

" Tag menu (Tlist)
" ================
let g:Tlist_WinWidth=20
"let g:Tlist_Use_SingleClick = 1
let g:Tlist_Show_One_File = 1
let g:Tlist_Auto_Highlight_Tag = 1
let g:Tlist_Highlight_Tag_On_BufEnter = 1

" WManager plugin
"================
let g:winManagerWindowLayout = "TagList,FileExplorer|BufExplorer"
let g:winManagerWidth = 35
let g:defaultExplorer = 1
let treeExplVertical = 1

" mapping commands
" ================

" Find references using (http://www.gnu.org/software/idutils/)
"nnoremap <silent> <F4> :Lid <C-R><C-W><CR>
"nnoremap <silent> \r :Lid <C-R><C-W><CR>

" Toggle the tags menu (winmanager)
nnoremap <silent> <F5> :WMToggle<CR>
nnoremap <silent> \w :WMToggle<CR>

" Toggle the NERD tree
nnoremap <silent> \n :NERDTreeToggle<CR>

" FuzzyFinder (http://www.vim.org/scripts/script.php?script_id=1984)
nnoremap <silent> \b :FufBuffer<CR>
nnoremap <silent> \f :FufFile<CR>
nnoremap <silent> \t :FufTag<CR>

